all-groups: cut -d: -f1 /etc/group | sort

ag: ag --color-match "1;36"

be: bundle exec

clean: sudo apt autoremove && sudo apt clean && sudo apt autoclean && gem clean && d clean
  hard: --volumes

compare-dir: diff --brief -Nr 

# Count files in folder. Folder name is optional
count: ls -1 ${1:-.} | wc -l

d: docker
  ps: ps --format "{{.ID}} {{.Names}}\t{{.Status}}  {{.Ports}}"
  clean: system prune -f
  i: images --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}"
  images: images --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}"
  rmi: images --format "{{.Repository}}:{{.Tag}}" |grep $1 | xargs docker rmi -f
  rmv: volume ls --format "{{.Name}}" |grep $1 |xargs docker volume rm -f
  v: volume
  n: network
  r: run -it --rm 
  size: images --format '{{.Size}}\t{{.Repository}}:{{.Tag}}' | sort -h | column -t
  stats: stats --format "{{.Name}}\t{{.CPUPerc}}\t{{.MemUsage}}"


dc: docker-compose
  ci: -f.ci/docker-compose.yml
  circle: -f.circleci/docker-compose.yml
  ls: config --services
  upd: up -d

decrypt: gpg2 -d

dfh: df -h |grep sd

dps: d ps
dpsa: d ps -a

dush: sudo du -sh

encrypt: gpg2 -c

f: find -name 

g: git
  s: status
  l: log --all --graph --date=relative --pretty=format:'%h %Cgreen%ad%Creset %Cblue%an%Creset%n        %s%n       %C(auto)%d%Creset'
  ll: log --graph --oneline --decorate --all
  c: add . --all && git commit -am
  p: push
  m: merge
  b: branch
  d: diff
  co: checkout
  pl: pull
  ls: ls-tree --full-name --name-only -r HEAD
  chmod: update-index --chmod 
  compare: diff --stat --color $1..HEAD
  datelog: log --pretty=format:'%h %ad%x09%an%x09%s' --date=short
  discard: checkout -- . ; git clean -fd
  history: log -p
  optimize: repack -ad && sleep 2 && git gc
  remote-delete: push origin --delete
  rebuild: commit --allow-empty -m "trigger rebuild" ; git push
  rename: branch -m
  resolve-ours: checkout --ours . ; git add -u ; git commit -m 'resolve conflicts with --ours'
  resolve-theirs: checkout --theirs . ; git add -u ; git commit -m 'resolve conflicts with --theirs'
  rollback: revert --no-commit $1..HEAD
  shallow-clone: clone --depth 1

gg: g p
ggt: gg && gg --tag
gpl: g pl

# GitHub API - example usage: github /user/repos
github: curl -H "Authorization: token $GITHUB_ACCESS_TOKEN" https://api.github.com$1

hk: heroku

https: http https://$@

inst: sudo apt install
uninst: sudo apt remove

# Create animated gif - delay parameter is optional
jpg2gif: convert -delay ${1:-300} -loop 0 *.jpg animated.gif

killport: [[ $(lsof -ti:$1) ]] && kill -9 $(lsof -ti:$1)

l: ls -l
ll: ls -la

less: less -S

now-update: echo downloading... && curl -s https://api.github.com/repos/zeit/now-cli/releases/latest | grep "download.*now-linux.gz" | cut -d : -f 2,3 | tr -d \" | wget -qi - && gunzip now-linux.gz && sudo mv now-linux /usr/local/bin/now && now --version

myip: ifconfig |head -n2 |sed -rn 's/.*addr:([^ ]+) .*/\1/p'

# Create animated gif - delay parameter is optional
png2gif: convert -delay ${1:-300} -loop 0 *.png animated.gif

pt: papertrail

py: python3

redis: redis-cli

runas: sudo su -s /bin/sh $1 -c "$2"

sad: ssh-add

slim: slimrb --pretty

uml: java -jar /vagrant/java/plantuml/plantuml.jar

update: sudo apt update && sudo apt upgrade && sudo apt autoremove

ver: lsb_release -drc

vir: vi -R


